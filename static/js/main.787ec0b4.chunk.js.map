{"version":3,"sources":["images/flag-company-name-2.jpg","images/showpage1.jpg","images/showpage2.jpg","images/showpage3.jpg","images/showpage4.jpg","images/display1.jpg","images/display2.jpg","images/display3.jpg","images/display4.jpg","images/display5.jpg","images/display6.jpg","images/display7.jpg","images/display8.jpg","images/display9.jpg","components/ShowCard.js","components/NavBar.js","containers/LandingPage.js","App.js","containers/FlagsPage.js","serviceWorker.js","index.js"],"names":["module","exports","ShowCard","className","src","this","props","photo","React","Component","NavBar","to","exact","LandingPage","landingPagePhotos","showpage1","showpage2","showpage3","showpage4","id","map","App","BackgroundImage","alt","height","width","FlagsPage","display1","display2","display3","display4","display5","display6","display7","display8","display9","Boolean","window","location","hostname","match","unregister","navigator","serviceWorker","ready","then","registration","catch","error","console","message","ReactDOM","render","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.787ec0b4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/flag-company-name-2.3384907d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/showpage1.f172f81b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/showpage2.58e9288e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/showpage3.94972a71.jpg\";","module.exports = __webpack_public_path__ + \"static/media/showpage4.e92b9f4b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/display1.e834bc63.jpg\";","module.exports = __webpack_public_path__ + \"static/media/display2.97d8171d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/display3.54c9c276.jpg\";","module.exports = __webpack_public_path__ + \"static/media/display4.78dd32a0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/display5.381970d1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/display6.0e321fd8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/display7.b2b99372.jpg\";","module.exports = __webpack_public_path__ + \"static/media/display8.9544822a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/display9.b6693d24.jpg\";","import React from 'react';\r\nimport '../style/ShowCard.css'\r\n\r\nclass ShowCard extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"photo-holder\">\r\n                <img src={this.props.photo} className=\"show-photo\"></img>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShowCard","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport '../style/NavBar.css'\r\n\r\nconst NavBar = () => \r\n    <div className='nav-container'>\r\n        <NavLink className='landing-link'\r\n            to='/'\r\n            exact>Home\r\n        </NavLink>\r\n        <NavLink className='flags-link'\r\n            to='/flags'\r\n            exact>Flags\r\n        </NavLink>\r\n    </div>\r\n\r\nexport default NavBar","import React from 'react'\r\nimport ShowCard from '../components/ShowCard'\r\nimport showpage1 from '../images/showpage1.jpg'\r\nimport showpage2 from '../images/showpage2.jpg'\r\nimport showpage3 from '../images/showpage3.jpg'\r\nimport showpage4 from '../images/showpage4.jpg'\r\nimport NavBar from '../components/NavBar'\r\nimport \"../style/LandingPage.css\"\r\n\r\nclass LandingPage extends React.Component {\r\n\r\n    render() {\r\n        const landingPagePhotos = [showpage1, showpage2, showpage3, showpage4]\r\n        return (\r\n            <div>\r\n                <div className=\"landing-description\">\r\n                    <h1 id=\"landing-text\">Custom Handmade Wood Flags created Right Here in Illinois!</h1>\r\n                </div>\r\n                <NavBar />\r\n                <div className=\"flag-container\">\r\n                    {landingPagePhotos.map((photo) => (\r\n                        <ShowCard photo={photo}/>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LandingPage","import React from 'react';\nimport './style/App.css';\nimport BackgroundImage from './images/flag-company-name-2.jpg'\nimport LandingPage from './containers/LandingPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"company-name-container\">\n          <img className=\"background-image\" src={BackgroundImage} alt=\"background flag\" height=\"300\" width=\"1400px\"></img>\n      </div>\n      <LandingPage />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\r\nimport '../style/FlagsPage.css'\r\nimport NavBar from '../components/NavBar'\r\nimport display1 from '../images/display1.jpg'\r\nimport display2 from '../images/display2.jpg'\r\nimport display3 from '../images/display3.jpg'\r\nimport display4 from '../images/display4.jpg'\r\nimport display5 from '../images/display5.jpg'\r\nimport display6 from '../images/display6.jpg'\r\nimport display7 from '../images/display7.jpg'\r\nimport display8 from '../images/display8.jpg'\r\nimport display9 from '../images/display9.jpg'\r\n\r\nclass FlagsPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavBar />\r\n                <div className=\"all-details\">\r\n                    <div className=\"size-details\">\r\n                        <h1 className=\"size-details-header\">Size Details</h1>\r\n                            <h3 className=\"dimensions\">Small: *Dimensions*</h3>\r\n                            <h3 className=\"dimensions\">Medium: *Dimensions*</h3>\r\n                            <h3 className=\"dimensions\">Large: *Dimensions*</h3>\r\n                    </div>\r\n                    <div className='price-details'>\r\n                        <h1 className=\"price-details-header\">Price Details</h1>\r\n                            <h4 className=\"tattered\">*For \"Tattered\" style flags, additional $10 fee applies*</h4>\r\n                            <h3>Small: $</h3>\r\n                            <h3>Medium: $$</h3>\r\n                            <h3>Large: $$$</h3>\r\n                    </div>\r\n                </div>\r\n            <div className='all-flags-holder'>\r\n\r\n                <div className=\"flag-1\">\r\n                    <img src={display1} className='flag-page-photos' alt='Black Tattered Flag'></img>\r\n                    <p className=\"flag-photo-description\">Tattered Black American Flag</p>\r\n                </div>\r\n\r\n                <div className=\"flag-2\">\r\n                    <img src={display2} className='flag-page-photos' alt='American Flag'></img>\r\n                    <p className=\"flag-photo-description\">American Flag</p>\r\n                </div>\r\n\r\n                <div className=\"flag-3\">\r\n                    <img src={display3} className='flag-page-photos' alt='Thin Blue Line Flag'></img>\r\n                    <p className=\"flag-photo-description\">Thin Blue Line American Flag</p>\r\n                </div>\r\n\r\n                <div className=\"flag-4\">\r\n                    <img src={display4} className='flag-page-photos' alt='Skull Flag'></img>\r\n                    <p className=\"flag-photo-description\">Skull American Flag</p>\r\n                </div>\r\n\r\n                <div className=\"flag-5\">\r\n                    <img src={display5} className='flag-page-photos' alt='Tattered American Flag'></img>\r\n                    <p className=\"flag-photo-description\">Tattered American Flag</p>\r\n                </div>\r\n\r\n                <div className=\"flag-6\">\r\n                    <img src={display6} className='flag-page-photos' alt='USAF Flag'></img>\r\n                    <p className=\"flag-photo-description\">USAF American Flag</p>\r\n                </div>\r\n\r\n                <div className=\"flag-7\">\r\n                    <img src={display7} className='flag-page-photos' alt='Snek Flag'></img>\r\n                    <p className=\"flag-photo-description\">Don't Tred On Me Flag</p>\r\n                </div>\r\n\r\n                <div className=\"flag-8\">\r\n                    <img src={display8} className='flag-page-photos' alt='Navy Flag'></img>\r\n                    <p className=\"flag-photo-description\">United States Navy American Flag</p>\r\n                </div>\r\n\r\n                <div className=\"flag-9\">\r\n                    <img src={display9} className='flag-page-photos' alt='Thin Red Line Flag'></img>\r\n                    <p className=\"flag-photo-description\">Thin Red Line American Flag</p>\r\n                </div>\r\n\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FlagsPage","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport App from './App';\nimport FlagsPage from './containers/FlagsPage'\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n      <Router>\n        <div>\n          <Route exact path='/' component={App} />\n          <Route exact path='/flags' component={FlagsPage} />\n        </div>\n      </Router>,\n\ndocument.getElementById('root')\n);\nserviceWorker.unregister();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}